(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{353:function(t,a,s){"use strict";s.r(a);var r=s(42),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),s("h2",{attrs:{id:"浏览器的存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的存储"}},[t._v("#")]),t._v(" 浏览器的存储")]),t._v(" "),s("h3",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),s("h4",{attrs:{id:"cookie-的来源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的来源"}},[t._v("#")]),t._v(" Cookie 的来源")]),t._v(" "),s("p",[t._v("Cookie 的本职工作并非本地存储，而是“维持状态”\n我们知道，HTTP 协议是无状态的，自身不对请求和响应之间的通信状态进行保存")]),t._v(" "),s("p",[t._v("举个简单的例子\n用户浏览了几个页面，下单了一盒饼干两盘游戏，最后结账时\n由于 HTTP 是无状态的，服务器不知道用户到底下单了什么")]),t._v(" "),s("p",[t._v("于是 cookie 诞生了，服务器可以设置或读取 Cookies 中的信息，来维护用户跟服务器之间的状态")]),t._v(" "),s("p",[t._v("我们就把 cookie 理解成存储在浏览器里的一个小小的文本文件\n它依附在 HTTP 请求上，在服务器与浏览器间飞来飞去\n它携带着用户的相关信息，当服务器检查 cookie 时，就可以获取客户端状态")]),t._v(" "),s("h4",{attrs:{id:"那什么时候使用-cookie-呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#那什么时候使用-cookie-呢"}},[t._v("#")]),t._v(" 那什么时候使用 cookie 呢？")]),t._v(" "),s("p",[t._v("这里说几个典型的场景：")]),t._v(" "),s("ul",[s("li",[t._v("记住密码，下次自动登录")]),t._v(" "),s("li",[t._v("购物车功能")]),t._v(" "),s("li",[t._v("记录用户浏览数据，进行商品（广告）推广")])]),t._v(" "),s("blockquote",[s("p",[t._v("思考：cookie 是在哪里生产的？起到了什么作用？"),s("br"),t._v("\ncookie 是网站为了辨别用户身份来存储在用户浏览器上的数据， 由服务端生成，放在客户端进行维护")])]),t._v(" "),s("h4",{attrs:{id:"生成-cookie-的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成-cookie-的方式"}},[t._v("#")]),t._v(" 生成 cookie 的方式")]),t._v(" "),s("ul",[s("li",[s("h5",{attrs:{id:"响应头里-set-cookie-存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应头里-set-cookie-存储"}},[t._v("#")]),t._v(" 响应头里 Set-Cookie 存储")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a3fWa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Expires"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Wed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" Oct "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以指定一个特定的过期时间（Expires）或有效期（Max-Age）")]),t._v("\n")])])]),s("p",[s("em",[t._v("注意了，这个过期时间，读取的是客户端的时间，而不是服务端")])]),t._v(" "),s("ul",[s("li",[s("h5",{attrs:{id:"js-通过-document-cookie-来读写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-通过-document-cookie-来读写"}},[t._v("#")]),t._v(" js 通过 document.cookie 来读写")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age=20;domain=.baidu.com'")]),t._v("\n")])])]),s("p",[t._v("此处，我们设置了 domain，意味着只有结尾为 baidu.com 的域名可以读取这条 cookie")]),t._v(" "),s("h4",{attrs:{id:"cookie-的缺点有什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的缺点有什么"}},[t._v("#")]),t._v(" Cookie 的缺点有什么？")]),t._v(" "),s("ul",[s("li",[s("h5",{attrs:{id:"cookie-很小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-很小"}},[t._v("#")]),t._v(" Cookie 很小")])])]),t._v(" "),s("p",[t._v("它的大小只有 4KB，如果存储的数据多，这是完全不够用的\n而且，在某些网站，对 cookie 的个数也是有限制的")]),t._v(" "),s("ul",[s("li",[s("h5",{attrs:{id:"过多的-cookie-带来巨大性能浪费"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过多的-cookie-带来巨大性能浪费"}},[t._v("#")]),t._v(" 过多的 Cookie 带来巨大性能浪费")])])]),t._v(" "),s("p",[t._v("Cookie 是紧跟域名的，同一域名下的所有请求，都会携带 cookie\nCookie 虽然小，但是请求可以有很多，随着请求的叠加，带来的服务器开销是可怕的")]),t._v(" "),s("ul",[s("li",[s("h5",{attrs:{id:"http-中不安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-中不安全"}},[t._v("#")]),t._v(" HTTP 中不安全")])])]),t._v(" "),s("p",[t._v("HTTP 请求中 Cookie 是明文传输的，除非你使用 HTTPS")]),t._v(" "),s("blockquote",[s("p",[t._v("思考：Cookie 到底带来了哪些好处？它的优缺点又是什么？")])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("HTML5 中增加了新的解决方案——Web Storage\n它又分为 sessionStorage 和 localStorage"),s("br"),t._v("\n有了 Web Storage，以后 cookie 只需要作为客户端和服务端的通道，保证客户端状态就行了")]),t._v(" "),s("h3",{attrs:{id:"localstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[t._v("#")]),t._v(" LocalStorage")]),t._v(" "),s("h4",{attrs:{id:"它有什么优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#它有什么优点"}},[t._v("#")]),t._v(" 它有什么优点")]),t._v(" "),s("ul",[s("li",[t._v("保存的数据可以长期存在\n下一次访问网站，网站可以直接读取以前保存的信息")]),t._v(" "),s("li",[t._v("大小提升，现在大小可以达到 5M 左右")]),t._v(" "),s("li",[t._v("仅在客户端使用，不与服务端通信")]),t._v(" "),s("li",[t._v("接口封装好")])]),t._v(" "),s("blockquote",[s("p",[t._v("思考：这些好处带来的变化是什么？")])]),t._v(" "),s("p",[t._v("localstorage 作为浏览器本地存储，可以在下次访问网页时"),s("br"),t._v("\n直接读取一些不变的信息，这样可以提升首屏渲染速度，提升用户体验")]),t._v(" "),s("h4",{attrs:{id:"localstorage-的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localstorage-的使用场景"}},[t._v("#")]),t._v(" LocalStorage 的使用场景？")]),t._v(" "),s("p",[t._v("理论上键值对存储数据的任务，都可以交给它来完成"),s("br"),t._v("\n通常我们网站更倾向于来存储一些稳定的资源，比如图片内容丰富的网站可以存储 Base64 格式图片")]),t._v(" "),s("h3",{attrs:{id:"sessionstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" SessionStorage")]),t._v(" "),s("p",[t._v("保存的数据只用于一次浏览器会话"),s("br"),t._v("\n当会话结束，数据就会被清空")]),t._v(" "),s("p",[t._v("值得注意的是\n即便你打开了同个网站下的两个不同页面，只要不是同一个浏览器"),s("br"),t._v("\n它们的 sessionstorage 也是无法共享的")]),t._v(" "),s("p",[t._v("这个很好理解，你使用不同浏览器登录同一个网站"),s("br"),t._v("\n那么你的 local 和 session 都不能共享数据")]),t._v(" "),s("p",[t._v("不同的是，不同标签页都不可以共享 sessionstorage"),s("br"),t._v("\n但是同一个浏览器的不同标签页，是可以共享 localstorage 的")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("总结它们之间的区别")]),t._v(" "),s("ul",[s("li",[t._v("共同点：都存储在浏览器端，同源策略")]),t._v(" "),s("li",[t._v("不同的：作用域不同，生命周期不同")])])]),t._v(" "),s("br"),t._v(" "),s("h5",{attrs:{id:"怎么理解作用域呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么理解作用域呢"}},[t._v("#")]),t._v(" 怎么理解作用域呢？")]),t._v(" "),s("p",[t._v("localStorage 只要在相同协议下、相同主机名、相同端口下同一浏览器，就能读取同一份数据\nsessionStorage 要更严格一些，必须还要在同一窗口下（同一标签页）")]),t._v(" "),s("br"),t._v(" "),s("h5",{attrs:{id:"怎么理解生命周期呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么理解生命周期呢"}},[t._v("#")]),t._v(" 怎么理解生命周期呢？")]),t._v(" "),s("p",[t._v("localStorage 持久化存储，永远不会过期，想删除，手动删除是唯一的办法"),s("br"),t._v("\nsessionStorage 临时性存储，页面关闭，数据也就清除了")]),t._v(" "),s("blockquote",[s("p",[t._v("思考：它们之间到底有什么不同？\n不同浏览器和不同标签页它们的使用区别又在哪里？")])]),t._v(" "),s("h3",{attrs:{id:"indexeddb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[t._v("#")]),t._v(" IndexedDB")]),t._v(" "),s("p",[t._v("它们存储的数据再多，也就 5M 极限了，那如果我数据特别庞大怎么办呢？"),s("br"),t._v("\nIndexedDB 出现了！")]),t._v(" "),s("p",[t._v("IndexedDB 是一种低级 API，用于客户端存储大量结构化数据，有多大呢？"),s("br"),t._v("\n存储没有上限，理论上不少于 250M")]),t._v(" "),s("p",[t._v("不仅存量极大，它还有个好处，就是异步"),s("br"),t._v("\n操作时它并不会锁死浏览器，用户还可以进行其他操作\n而 localstorage，它只能是同步的，如果数据过大的读写，会拖慢网页")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("现在我们总结一下这些浏览器的存储")]),t._v(" "),s("ul",[s("li",[t._v("Cookie 的本职工作并非本地存储，而是“维持状态”")]),t._v(" "),s("li",[t._v("Web Storage 是 HTML5 专门为浏览器存储而提供的数据存储机制，不与服务端发生通信")]),t._v(" "),s("li",[t._v("IndexedDB 用于客户端存储大量结构化数据")])])]),t._v(" "),s("h2",{attrs:{id:"恶意脚本攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恶意脚本攻击"}},[t._v("#")]),t._v(" 恶意脚本攻击")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("考察点")]),t._v(" "),s("p",[t._v("XSS 攻击和 CSRF 攻击")])]),t._v(" "),s("h3",{attrs:{id:"xss-cross-site-script-跨站脚本攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss-cross-site-script-跨站脚本攻击"}},[t._v("#")]),t._v(" XSS (Cross Site Script) 跨站脚本攻击")]),t._v(" "),s("h4",{attrs:{id:"常见的注入方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的注入方式"}},[t._v("#")]),t._v(" 常见的注入方式")]),t._v(" "),s("h4",{attrs:{id:"如何防范-xss-的攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何防范-xss-的攻击"}},[t._v("#")]),t._v(" 如何防范 XSS 的攻击")]),t._v(" "),s("h2",{attrs:{id:"服务器渲染页面过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器渲染页面过程"}},[t._v("#")]),t._v(" 服务器渲染页面过程")]),t._v(" "),s("h3",{attrs:{id:"渲染过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程"}},[t._v("#")]),t._v(" 渲染过程")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("从耗时的角度，浏览器请求、加载、渲染一个页面，时间花在下面五件事情上：")]),t._v(" "),s("ul",[s("li",[t._v("DNS 查询")]),t._v(" "),s("li",[t._v("TCP 连接")]),t._v(" "),s("li",[t._v("HTTP 请求即响应")]),t._v(" "),s("li",[t._v("服务器响应")]),t._v(" "),s("li",[t._v("客户端渲染")])])]),t._v(" "),s("p",[t._v("而这最后一步客户端渲染，又可以分为以下五个步骤：")]),t._v(" "),s("ul",[s("li",[t._v("处理 HTML 标记并构建 DOM 树。")]),t._v(" "),s("li",[t._v("处理 CSS 标记并构建 CSSOM 树。")]),t._v(" "),s("li",[t._v("将 DOM 与 CSSOM 合并成一个渲染树。")]),t._v(" "),s("li",[t._v("根据渲染树来布局，以计算每个节点的几何信息。")]),t._v(" "),s("li",[t._v("将各个节点绘制到屏幕上。")])]),t._v(" "),s("p",[s("em",[t._v("需要明白，这五个步骤并不一定一次性顺序完成。如果 DOM 或 CSSOM 被修改，以上过程需要重复执行，这样才能计算出哪些像素需要在屏幕上进行重新渲染。"),s("br"),t._v("\n实际页面中，CSS 与 JavaScript 往往会多次修改 DOM 和 CSSOM，下面就来看看它们的影响方式。")])]),t._v(" "),s("h3",{attrs:{id:"阻塞渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阻塞渲染"}},[t._v("#")]),t._v(" 阻塞渲染")]),t._v(" "),s("p",[t._v("谈论资源的阻塞时，我们要清楚，现代浏览器总是并行加载资源。"),s("br"),t._v("\n例如，当 HTML 解析器（HTML Parser）被脚本阻塞时，解析器虽然会停止构建 DOM，但仍会识别该脚本后面的资源，并进行预加载。")]),t._v(" "),s("p",[t._v("同时还要注意：")]),t._v(" "),s("ul",[s("li",[t._v("默认情况下，CSS 被视为阻塞渲染的资源，这意味着浏览器将不会渲染任何已处理的内容，直至 CSSOM 构建完毕。")]),t._v(" "),s("li",[t._v("JavaScript 不仅可以读取和修改 DOM 属性，还可以读取和修改 CSSOM 属性")])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("存在阻塞的 CSS 资源时，浏览器会延迟 JavaScript 的执行和 DOM 构建")]),t._v(" "),s("ul",[s("li",[t._v("当浏览器遇到一个 script 标记时，DOM 构建将暂停，直至脚本完成执行")]),t._v(" "),s("li",[t._v("JavaScript 可以查询和修改 DOM 与 CSSOM")]),t._v(" "),s("li",[t._v("CSSOM 构建时，JavaScript 执行将暂停，直至 CSSOM 就绪")])]),t._v(" "),s("p",[s("strong",[t._v("所以，script 标签的位置很重要")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("实际开发中，我们应该遵循下面两条：")]),t._v(" "),s("ul",[s("li",[t._v("CSS 优先：引入顺序上，CSS 资源先于 JavaScript 资源")]),t._v(" "),s("li",[t._v("JavaScript 应尽量少影响 DOM 的构建")])])]),t._v(" "),s("h4",{attrs:{id:"css-阻塞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-阻塞"}},[t._v("#")]),t._v(" CSS 阻塞")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index.css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("这样的 link 标签（无论是否 inline）会被视为阻塞渲染的资源"),s("br"),t._v("\n浏览器会优先处理这些 CSS 资源，直至 CSSOM 构建完毕")]),t._v(" "),s("h4",{attrs:{id:"javascript-阻塞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-阻塞"}},[t._v("#")]),t._v(" JavaScript 阻塞")]),t._v(" "),s("p",[t._v("JavaScript 的情况比 CSS 要更复杂一些")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("为了卡兹莫丹！"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"inline"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("为了暴风城！！"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("为了希尔瓦娜斯的荣耀！"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("这样的 script 标签会阻塞 HTML 解析，无论是不是 inline-script"),s("br"),t._v("\n上面的 P 标签会从上到下解析，这个过程会被两段 JavaScript 分别打断一次（加载并且执行的时间段内）")])])}),[],!1,null,null,null);a.default=e.exports}}]);